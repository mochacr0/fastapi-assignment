"""create_task_table

Revision ID: 076e3a917393
Revises: 
Create Date: 2024-08-26 21:54:03.177644

"""

from typing import Sequence, Union
from uuid import uuid4

from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision: str = "076e3a917393"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    task_table = op.create_table(
        "tasks",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("summary", sa.String(), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column(
            "status",
            sa.Enum(
                "NOT_STARTED",
                "IN_PROGRESS",
                "COMPLETED",
                "CANCELLED",
                name="task_status",
            ),
            nullable=True,
        ),
        sa.Column(
            "priority",
            sa.Enum("LOW", "MEDIUM", "HIGH", "CRITICAL", name="task_priority"),
            nullable=True,
        ),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("id"),
    )

    # data seeding
    op.bulk_insert(
        task_table,
        [
            {
                "id": "01cca04b-7fa6-4021-a50f-e27c30a3d095",
                "name": "Develop User Authentication",
                "summary": "Implement a secure user authentication system.",
                "description": "Create a user authentication system that includes registration, login, and password "
                "recovery features. ",
                "status": "NOT_STARTED",
                "priority": "LOW",
            },
            {
                "id": "3b615121-4ec2-4300-b7c5-5780302b40be",
                "name": "Design Landing Page",
                "summary": "Create a visually appealing and responsive landing page.",
                "description": "Design the landing page for the company's new product launch. The page should be "
                "fully responsive, ensuring a consistent experience across devices of different screen sizes.",
                "status": "IN_PROGRESS",
                "priority": "MEDIUM",
            },
            {
                "id": "bc23228b-2302-4e85-907b-c1788fa08252",
                "name": "Database Migration",
                "summary": "Migrate the existing database to a new schema.",
                "description": "Perform a database migration from the current schema to the new optimized schema. The "
                "migration should preserve all existing data and ensure that there is no downtime during the process.",
                "status": "COMPLETED",
                "priority": "HIGH",
            },
        ],
        # ### end Alembic commands ###
    )


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("DROP TABLE tasks")
    op.execute("DROP TYPE IF EXISTS task_status")
    op.execute("DROP TYPE IF EXISTS task_priority")
    # ### end Alembic commands ###
